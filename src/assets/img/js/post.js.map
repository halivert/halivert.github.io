{"version":3,"file":"post.js","sources":["../../src/ts/types/reactions.ts","../../src/ts/post.ts"],"sourcesContent":["import { Mentions } from \"@/ts/types/mentions\"\n\nexport namespace Reactions {\n  export interface Props {\n    postUrl: string\n  }\n\n  export interface Component {\n    reactions: Array<Reaction | null>\n    mentions: Mentions.Object\n    fetchReactions: Function\n  }\n\n  export interface Reactions {\n    some: string\n  }\n}\n\nexport interface Reactions {\n  count: number\n  type: Record<string, number>\n}\n\nexport interface Reaction {\n  className: string[]\n  filter?: string\n  count?: number\n  name?: string\n}\n\nexport const availableReactions: Record<string, Reaction> = {\n  like: {\n    className: [\"fa-star\", \"has-text-warning\"],\n  },\n  repost: {\n    className: [\"fa-retweet\", \"has-text-success\"],\n  },\n  reply: {\n    className: [\"fa-comment-dots\", \"has-text-text\"],\n  },\n  mention: {\n    className: [\"fa-quote-right\", \"has-text-text\"],\n    filter: \"mention-of\",\n  },\n}\n","import { createApp } from \"petite-vue\"\n\nimport { Reactions, Reaction, availableReactions } from \"@/ts/types/reactions\"\nimport { Mentions } from \"@/ts/types/mentions\"\nimport { urlBuilder } from \"@/ts/functions\"\n\nexport namespace Post {\n  export interface Image {\n    ext: string\n    mime: string\n  }\n}\n\nexport interface Post {\n  id: string\n  title: string\n  categories: string[]\n  tags: string[]\n  author: string\n  image_types: string\n  image: string\n  image_alt: string\n  url: string\n  date: string\n  content: string\n  continue: number\n}\n\nfunction twitterLink(rawPostUrl: string): string {\n  const postUrl = new URL(rawPostUrl)\n\n  const author = (<HTMLMetaElement>(\n    document.head.querySelector(\"meta[name='author']\")\n  )).content\n\n  return urlBuilder(\"https://twitter.com/intent/tweet\", {\n    original_referer: `${postUrl.origin}`,\n    text: document.title,\n    url: postUrl.href,\n    via: author,\n  }).toString()\n}\n\nfunction getMentionsUrl(props: Mentions.Props): string {\n  return urlBuilder(`${props.apiUrl}/mentions.html`, {\n    target: props.postUrl,\n    \"wm-property\": props?.filter,\n  }).toString()\n}\n\nfunction Reactions(props: Reactions.Props) {\n  const apiUrl = \"https://webmention.io/api\"\n\n  async function fetchReactions(this: Reactions.Component) {\n    const fetchedReactions = (await (\n      await fetch(`${apiUrl}/count.json?target=${props?.postUrl}`)\n    ).json()) as Reactions\n\n    this.reactions = Object.entries(availableReactions).map(\n      ([type, reactionData]) => {\n        const count: number = fetchedReactions.type?.[type] || 0\n\n        if (reactionData.filter && count) {\n          this.mentions.count = count\n          return null\n        }\n\n        return {\n          count: count,\n          name: type,\n          className: [...reactionData.className, \"fa\", \"ml-3\", \"mr-2\"],\n        }\n      }\n    )\n  }\n\n  const reactions: Reaction[] = []\n\n  return {\n    reactions,\n    mentions: {\n      count: 0,\n      url: getMentionsUrl({\n        apiUrl,\n        postUrl: props?.postUrl,\n        filter: availableReactions.mention.filter,\n      }),\n    },\n\n    fetchReactions,\n  }\n}\n\nconst mountApp = () => createApp({ twitterLink, Reactions }).mount(\"#reactions\")\n\ndocument.addEventListener(\"DOMContentLoaded\", mountApp)\n"],"names":["createApp"],"mappings":"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"}