---
import { getCollection } from "astro:content"
import { getLangFromUrl, useTranslations } from "@/i18n/utils"
import { getRelativeLocaleUrl } from "astro:i18n"

interface Props {
	categories: string[]
}

const siteCategories = Object.fromEntries(
	(await getCollection("categories")).map((category) => [
		category.id,
		category.data.slug,
	]),
)

const { categories } = Astro.props

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<aside class="text-center">
	<h2 class="text-2xl mb-6">{t("Categor√≠as")}</h2>
	<div class="flex flex-col gap-1">
		{
			categories.map((category) => (
				<a
					href={getRelativeLocaleUrl(
						lang,
						`/blog/${siteCategories[category]}/1`,
					)}
				>
					{t(category)}
				</a>
			))
		}
	</div>
</aside>
